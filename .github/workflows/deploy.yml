name: CI/CD Docker Telegram Bot

on:
  push:
    branches: [ main ]
    paths:
      - 'TelegramBot/**'
      - 'docker-compose.yml'
      - '.github/workflows/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      REMOTE_DIR: /home/RecipeApp/RecipeApp/ACTUAL__Build_compose

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install lint/test tools
        run: |
          pip install flake8 pytest

      - name: Lint & Test (wonâ€™t fail build)
        run: |
          flake8 || echo "flake8 warnings"
          pytest -q || echo "tests failed but continue"

      - name: Sync TelegramBot code to server
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
        run: |
          echo "$SSH_KEY" > key.pem && chmod 600 key.pem

          rsync -az --progress \
                --relative \
                --delete \
                --include 'TelegramBot/' \
                --include 'TelegramBot/***' \
                --include 'docker-compose.yml' \
                --exclude '*' \
                ./ \
                ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:${{ env.REMOTE_DIR }}/

          rm -f key.pem

      - name: Rebuild Docker stack (telegram_bot + recipe_app)
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
        run: |
          echo "$SSH_KEY" > key.pem && chmod 600 key.pem

          ssh -o StrictHostKeyChecking=no -i key.pem \
              ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
                set -e
                cd $REMOTE_DIR
                docker-compose up -d --build --force-recreate
                docker image prune -f
          EOF

          rm -f key.pem

name: CI/CD  Docker  Telegram Bot

on:
  push:
    branches: [ main ]     # ▶️ запуск при любом push в main
  workflow_dispatch:       # ▶️ и вручную по кнопке “Run workflow”

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      REMOTE_DIR: /home/RecipeApp/RecipeApp/ACTUAL__Build_compose

    steps:
      # 0. Забираем код
      - uses: actions/checkout@v3

      # 1. (Опц.) Линтеры/тесты
      - name: Run flake8 & pytest
        run: |
          pip install flake8 pytest
          flake8 || echo "flake8 warnings"
          pytest -q || echo "tests failed but continue"

      # 2. Копируем проект на сервер
      - name: Copy project to server via rsync
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
        run: |
          echo "$SSH_KEY" > key.pem && chmod 600 key.pem
          rsync -az --delete \
                -e "ssh -o StrictHostKeyChecking=no -i key.pem" \
                ./ ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:${{ env.REMOTE_DIR }}/

      # 3. Пересобираем и перезапускаем контейнеры
      - name: Rebuild & restart docker‑compose on server
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
        run: |
          echo "$SSH_KEY" > key.pem && chmod 600 key.pem
          ssh -o StrictHostKeyChecking=no -i key.pem \
              ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << EOF
                cd $REMOTE_DIR
                docker-compose pull          # на случай, если base images обновились
                docker-compose down
                docker-compose up -d --build
                docker image prune -f        # очистка dangling images
          EOF
